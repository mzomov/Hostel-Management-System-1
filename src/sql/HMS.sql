
/* Drop Tables */

DROP TABLE FINE_RECORD;
DROP TABLE MESS_RECORD;
DROP TABLE SER_BILL;
DROP TABLE BILL_RECORD;
DROP TABLE LOGIN;
DROP TABLE QUALIFICATION;
DROP TABLE STD_SER;
DROP TABLE STUDENT;
DROP TABLE EMPLOYEE;
DROP TABLE ROOM;
DROP TABLE SERVICE;




/* Create Tables */

CREATE TABLE BILL_RECORD
(
	B_ID NUMERIC NOT NULL,
	B_AMOUNT NUMERIC NOT NULL,
	B_GDATE DATETIME NOT NULL,
	B_DDATE DATETIME NOT NULL,
	STD_ID VARCHAR(13) NOT NULL,
	B_PAID BIT,
	B_ADD BIT NOT NULL,
	B_DESP VARCHAR(100),
	PRIMARY KEY (B_ID)
);


CREATE TABLE EMPLOYEE
(
	E_ID NUMERIC NOT NULL,
	E_MNG NUMERIC NOT NULL,
	E_NAME VARCHAR(50) NOT NULL,
	E_FNAME VARCHAR(50) NOT NULL,
	E_GENDER VARCHAR(50) NOT NULL,
	E_AGE NUMERIC NOT NULL,
	E_MOB VARCHAR(15) NOT NULL,
	E_NIC VARCHAR(15) NOT NULL,
	E_EMAIL VARCHAR(50) NOT NULL,
	E_DOB DATETIME NOT NULL,
	E_ADDRESS VARCHAR(50) NOT NULL,
	CONSTRAINT PK_EMP PRIMARY KEY (E_ID)
);


CREATE TABLE FINE_RECORD
(
	F_ID NUMERIC NOT NULL,
	STD_ID VARCHAR(13) NOT NULL,
	B_ID NUMERIC,
	F_REASON VARCHAR(250) NOT NULL,
	F_GDATE DATETIME NOT NULL,
	F_CHARGES NUMERIC NOT NULL,
	CONSTRAINT PK_FR PRIMARY KEY (F_ID)
);


CREATE TABLE LOGIN
(
	E_ID NUMERIC NOT NULL CONSTRAINT UN_EMP UNIQUE,
	USERNAME VARCHAR(30) NOT NULL,
	PASSWORD VARCHAR(30) NOT NULL,
	PRIMARY KEY (USERNAME)
);


CREATE TABLE MESS_RECORD
(
	M_ID NUMERIC NOT NULL IDENTITY ,
	STD_ID VARCHAR(13) NOT NULL,
	S_TITLE VARCHAR(25) NOT NULL,
	M_TYPE VARCHAR(25) NOT NULL,
	M_STATUS BIT NOT NULL,
	M_CHARGES NUMERIC NOT NULL,
	M_DATE DATETIME NOT NULL,
	B_ID NUMERIC,
	CONSTRAINT PK_MR PRIMARY KEY (M_ID),
	CONSTRAINT UN_MR UNIQUE (STD_ID, S_TITLE, M_TYPE, M_DATE)
);


CREATE TABLE QUALIFICATION
(
	STD_ID VARCHAR(13) NOT NULL,
	Q_TITLE VARCHAR(50) NOT NULL,
	Q_INST VARCHAR(50) NOT NULL,
	Q_DUR NUMERIC NOT NULL,
	Q_YOP VARCHAR(20) NOT NULL,
	Q_TMARK NUMERIC NOT NULL,
	Q_OMARK NUMERIC NOT NULL,
	Q_PER FLOAT NOT NULL
);


CREATE TABLE ROOM
(
	R_NO NUMERIC NOT NULL,
	R_CAP NUMERIC NOT NULL,
	R_LOC VARCHAR(50) NOT NULL,
	R_COUNT NUMERIC DEFAULT 0 NOT NULL,
	R_FULL BIT DEFAULT '0' NOT NULL,
	CONSTRAINT PK_ROOM PRIMARY KEY (R_NO)
);


CREATE TABLE SERVICE
(
	S_TITLE VARCHAR(25) NOT NULL,
	S_TYPE VARCHAR(50) NOT NULL,
	S_CHTYPE VARCHAR(50) NOT NULL,
	S_CHARGE FLOAT NOT NULL,
	PRIMARY KEY (S_TITLE)
);


CREATE TABLE SER_BILL
(
	B_ID NUMERIC NOT NULL,
	STD_ID VARCHAR(13) NOT NULL,
	S_TITLE VARCHAR(25) NOT NULL,
	CONSTRAINT UN_SB UNIQUE (B_ID, STD_ID, S_TITLE)
);


CREATE TABLE STD_SER
(
	STD_ID VARCHAR(13) NOT NULL,
	S_TITLE VARCHAR(25) NOT NULL,
	PRIMARY KEY (STD_ID, S_TITLE)
);


CREATE TABLE STUDENT
(
	STD_ID VARCHAR(13) NOT NULL,
	R_NO NUMERIC NOT NULL,
	E_ID NUMERIC NOT NULL,
	STD_NAME VARCHAR(50) NOT NULL,
	STD_GENDER VARCHAR(50) NOT NULL,
	STD_AGE NUMERIC NOT NULL,
	STD_DOB DATETIME NOT NULL,
	STD_BG VARCHAR(50) NOT NULL,
	STD_MOB VARCHAR(12) NOT NULL,
	STD_NIC VARCHAR(15) NOT NULL CONSTRAINT UN_NIC UNIQUE,
	STD_EMAIL VARCHAR(50) NOT NULL,
	STD_ADDRESS VARCHAR(50) NOT NULL,
	STD_COUNTRY VARCHAR(50) NOT NULL,
	STD_FNAME VARCHAR(50) NOT NULL,
	STD_FWORK VARCHAR(50) NOT NULL,
	STD_FMOB VARCHAR(12) NOT NULL,
	CONSTRAINT PK_STD PRIMARY KEY (STD_ID)
);



/* Create Foreign Keys */

ALTER TABLE FINE_RECORD
	ADD FOREIGN KEY (B_ID)
	REFERENCES BILL_RECORD (B_ID)
	
;


ALTER TABLE MESS_RECORD
	ADD FOREIGN KEY (B_ID)
	REFERENCES BILL_RECORD (B_ID)
	
;


ALTER TABLE SER_BILL
	ADD FOREIGN KEY (B_ID)
	REFERENCES BILL_RECORD (B_ID)
	
;


ALTER TABLE EMPLOYEE
	ADD FOREIGN KEY (E_MNG)
	REFERENCES EMPLOYEE (E_ID)
	
;


ALTER TABLE LOGIN
	ADD FOREIGN KEY (E_ID)
	REFERENCES EMPLOYEE (E_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE STUDENT
	ADD FOREIGN KEY (E_ID)
	REFERENCES EMPLOYEE (E_ID)
	
;


ALTER TABLE STUDENT
	ADD FOREIGN KEY (R_NO)
	REFERENCES ROOM (R_NO)
	
;


ALTER TABLE STD_SER
	ADD FOREIGN KEY (S_TITLE)
	REFERENCES SERVICE (S_TITLE)
	
;


ALTER TABLE MESS_RECORD
	ADD FOREIGN KEY (STD_ID, S_TITLE)
	REFERENCES STD_SER (STD_ID, S_TITLE)
	
;


ALTER TABLE SER_BILL
	ADD FOREIGN KEY (STD_ID, S_TITLE)
	REFERENCES STD_SER (STD_ID, S_TITLE)
	
;


ALTER TABLE BILL_RECORD
	ADD FOREIGN KEY (STD_ID)
	REFERENCES STUDENT (STD_ID)
	
;


ALTER TABLE FINE_RECORD
	ADD FOREIGN KEY (STD_ID)
	REFERENCES STUDENT (STD_ID)
	
;


ALTER TABLE QUALIFICATION
	ADD FOREIGN KEY (STD_ID)
	REFERENCES STUDENT (STD_ID)
	
;


ALTER TABLE STD_SER
	ADD FOREIGN KEY (STD_ID)
	REFERENCES STUDENT (STD_ID)
	
;



